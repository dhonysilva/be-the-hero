{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,iCAAkD;AAiBzC,oBAjBe,gBAAS,CAiBf;AAhBlB,mCAA+E;AAgB3D,iCAhBX,8BAAsB,CAgBW;AAAE,2BAhBX,wBAAgB,CAgBW;AAAE,qBAhBX,kBAAU,CAgBW;AAbxE,SAAsB,UAAU,CAC9B,OAA2B,EAC3B,WAAkC,EAAE;;QAEpC,IAAI,MAAM,wBAAgB,EAAE,EAAE;YAC5B,OAAO,kBAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACtC;QACD,OAAO,gBAAS,iCACT,OAAO,KAAE,MAAM,EAAE,oBAAa,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,aAAa,EAAE,OAAO,CAAC,KAAK,KACjF,QAAQ,CACT,CAAC;IACJ,CAAC;CAAA;AAXD,gCAWC","sourcesContent":["import { ImageFormat, ResizeMode } from './Image.types';\nimport { convertFormat, jimpAsync } from './jimp';\nimport { findSharpInstanceAsync, isAvailableAsync, sharpAsync } from './sharp';\nimport { SharpCommandOptions, SharpGlobalOptions } from './sharp.types';\n\nexport async function imageAsync(\n  options: SharpGlobalOptions,\n  commands: SharpCommandOptions[] = []\n) {\n  if (await isAvailableAsync()) {\n    return sharpAsync(options, commands);\n  }\n  return jimpAsync(\n    { ...options, format: convertFormat(options.format), originalInput: options.input },\n    commands\n  );\n}\n\nexport { jimpAsync, findSharpInstanceAsync, isAvailableAsync, sharpAsync };\n\nexport { SharpGlobalOptions, SharpCommandOptions, ResizeMode, ImageFormat };\n"]}